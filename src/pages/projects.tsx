// https://github.com/minwe/jetbrains-react

import React, {Component} from 'react';

import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableContainer from '@material-ui/core/TableContainer';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import Paper from '@material-ui/core/Paper';

type ProjectsProps = {

}

type Project = {
    project_key: string; // usually the first letters of words which are used in name
    lead: string;
    name: string;
    key?: string; // generated by db
}

type ProjectsState = {
    projects: Project[];
    errors: any;
}

class projects extends Component <ProjectsProps, ProjectsState> {
    constructor(props: any) {
        super(props);
        this.state = {
            projects: [],
            errors: null
        };
    }

    async getRows() {
        this.setState({
            projects: [{
                key: "0", // key from db
                project_key: 'mock-project-0', // usually the first letters of words which are used in name
                lead: 'creatorId',
                name: 'Mock Project'
            }]
        });
        // try {
        //     const projectsRes = await axios.get('/projects');
        //     this.setState({
        //         projects: projectsRes.data
        //     });
        // } catch (err) {
        //     console.log('/projects failed: ', err);
        //     this.setState({ errors: err.message });
        // }
    }

    componentDidMount() {
        this.getRows();
    }

    render() {
        const handleRowClick = () => {
          //  history.push(`/project/${projectKey}`); projectKey: string
        };

        let projectRows = this.state.projects
            ? this.state.projects.map((row) => (
                <TableRow onClick={() => handleRowClick()} key={row.name}>
                    <TableCell component='th' scope='row'>
                        {row.name}
                    </TableCell>
                    <TableCell align='left'>{row.project_key}</TableCell>
                    <TableCell align='left'>{row.lead}</TableCell>
                </TableRow>
            ))
            : (this.state.errors
                ? <TableRow><TableCell align='left'>{this.state.errors}</TableCell></TableRow>
                : <TableRow><TableCell align='left'>Loading...</TableCell></TableRow>);
        return (
            <div>
                <h1>Projects</h1>

                <TableContainer component={Paper}>
                    <Table>
                        <TableHead>
                            <TableRow>
                                <TableCell>Name</TableCell>
                                <TableCell>Key</TableCell>
                                <TableCell>Lead</TableCell>
                            </TableRow>
                        </TableHead>
                        <TableBody>
                            {projectRows}
                        </TableBody>
                    </Table>
                </TableContainer>
            </div>
        );
    }
}

export default projects;
